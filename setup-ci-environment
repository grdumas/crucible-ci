#!/usr/bin/env bash
# -*- mode: sh; indent-tabs-mode: nil; sh-basic-offset: 4 -*-
# vim: autoindent tabstop=4 shiftwidth=4 expandtab softtabstop=4 filetype=bash

SCRIPT_DIR=$(dirname $0)
SCRIPT_DIR=$(readlink -e ${SCRIPT_DIR})

CRUCIBLE_INSTALL_SRC="https://raw.githubusercontent.com/perftool-incubator/crucible/master/crucible-install.sh"
CI_TARGET=""
CI_TARGET_DIR=""

longopts="ci-target:,ci-target-dir:"
opts=$(getopt -q -o "" --longoptions "${longopts}" -n "$0" -- "$@")
if [ ${?} -ne 0 ]; then
    echo "ERROR: Unrecognized option specified: $@"
    exit 1
fi
eval set -- "${opts}"
while true; do
    case "${1}" in
        --ci-target)
            shift
            CI_TARGET="${1}"
            shift
            ;;
        --ci-target-dir)
            shift
            CI_TARGET_DIR="${1}"
            shift
            ;;
        --)
            shift
            break
            ;;
        *)
            echo "ERROR: Unexpected argument [${1}]"
            shift
            break
            ;;
    esac
done

# configure SSH for loopback connectivity
apt install openssh-server
systemctl start sshd
ssh-keygen -t ed25519 -q -f /root/.ssh/id_ed25519 -N ""
bash -c "cat /root/.ssh/id_ed25519.pub > /root/.ssh/authorized_keys"
chmod 600 /root/.ssh/authorized_keys
ssh -o StrictHostKeyChecking=no localhost echo "password-less root login over ssh works"

# condition environment for crucible
mkdir -p /etc/sysconfig

if pushd ~/ > /dev/null; then
    wget ${CRUCIBLE_INSTALL_SRC}
    chmod +x ./crucible-install.sh
    INSTALLER_ARGS=""
    if [ -n "${CI_TARGET}" -a -n "${CI_TARGET_DIR}" -a "${CI_TARGET}" == "crucible" ]; then
        INSTALLER_ARGS=" --git-repo ${CI_TARGET_DIR}/.git"
    fi
    INSTALLER_CMD="./crucible-install.sh --client-server-registry dir:/home/crucible-containers/client-server --name nobody --email nobody@nobody.nobody.com --verbose ${INSTALLER_ARGS}"
    echo "Running: ${INSTALLER_CMD}"
    ${INSTALLER_CMD}
    RC=$?
    if [ ${RC} != 0 ]; then
        exit ${RC}
    fi

    popd > /dev/null
else
    echo "ERROR: Could not pushd to ~/"
    exit 1
fi

if [ -n "${CI_TARGET}" -a -n "${CI_TARGET_DIR}" ]; then
    if [ "${CI_TARGET}" != "crucible" ]; then
        echo "Handling --ci-target=${CI_TARGET} --ci-target-dir=${CI_TARGET_DIR}"

        if pushd /opt/crucible/subprojects > /dev/null; then
            STALE_LINK=$(find . -name ${CI_TARGET} -type l)

            if [ -z "${STALE_LINK}" ]; then
                echo "ERROR: Could not find --ci-target=${CI_TARGET}"
                exit 1
            fi

            if pushd $(dirname ${STALE_LINK}) > /dev/null; then
                echo "Found ${CI_TARGET} in $(pwd)"
                echo "Removing ${CI_TARGET}:"
                rm -v $(basename ${STALE_LINK})
                echo "Creating new symbolic link:"
                ln -sv ${CI_TARGET_DIR} $(basename ${STALE_LINK})
            else
                echo "ERROR: Could not pushd to $(dirname ${STALE_LINK})"
                exit 1
            fi
        else
            echo "ERROR: Could not pushd to /opt/crucible/subprojects"
            exit 1
        fi
    fi
else
    if [ -n "${CI_TARGET}" ]; then
        echo "ERROR: You must set --ci-target-dir when setting --ci-target"
        exit 1
    fi

    if [ -n "${CI_TARGET_DIR}" ]; then
        echo "ERROR: You must set --ci-target when setting --ci-target-dir"
        exit 1
    fi
fi

# -*- mode: sh; indent-tabs-mode: nil; sh-basic-offset: 4 -*-
# vim: autoindent tabstop=4 shiftwidth=4 expandtab softtabstop=4 filetype=bash

function start_github_group {
    local header
    header="$@"

    if [ "${CI_RUN_ENVIRONMENT}" == "github" ]; then
        echo "::group::${header}"
    fi
}

function stop_github_group {
    if [ "${CI_RUN_ENVIRONMENT}" == "github" ]; then
        echo "::endgroup::"
    fi
}

function log_rc {
    local rc
    rc=${1}
    
    if [ "${CI_RUN_ENVIRONMENT}" == "github" ]; then
        if [ ${rc} == 0 ]; then
            echo "::notice::rc=${rc}"
        else
            echo "::error::rc=${rc}"
        fi
    else
        echo "rc=${rc}"
    fi
}

function validate_ci_clean_environment {
    case "${CI_CLEAN_ENVIRONMENT}" in
        yes|no)
            echo "CI Clean Evironment is '${CI_CLEAN_ENVIRONMENT}'"
            echo
            ;;
        *)
            echo "ERROR: Unknown value for --clean-environment [${CI_CLEAN_ENVIRONMENT}].  Acceptable values are 'yes' and 'no'."
            exit 1
            ;;
    esac
}

function validate_ci_run_environment {
    case "${CI_RUN_ENVIRONMENT}" in
        standalone|github)
            echo "CI Run Environment is '${CI_RUN_ENVIRONMENT}'"
            echo
            ;;
        *)
            echo "ERROR: Unknown value for --run-environment [${CI_RUN_ENVIRONMENT}].  Acceptable values are 'standalone' and 'github'."
            exit 1
            ;;
    esac
}

function validate_ci_endpoint {
    case "${CI_ENDPOINT}" in
        remotehost|k8s)
            echo "CI Endpoint is '${CI_ENDPOINT}'"
            echo
            ;;
        *)
            echo "ERROR: Unknown value for --ci-endpoint [${CI_ENDPOINT}].  Acceptable values are 'remotehost' and 'k8s'."
            exit 1
            ;;
    esac
}

function do_ssh {
    ssh -o PasswordAuthentication=no $@
}

function clean_ci_environment {
    if [ "${CI_CLEAN_ENVIRONMENT}" == "yes" ]; then
        header="Clean CI environment"
        start_github_group "${header}"
        echo -e "*** ${header} ***\n"
        stop_github_group

        header="Stopping Crucible Services"
        start_github_group "${header}"
        echo -e "### ${header} ###\n"
        echo
        crucible stop es
        crucible stop httpd
        crucible stop redis
        stop_github_group

        header="Removing podman resources (containers and images)"
        start_github_group "${header}"
        echo -e "### ${header} ###\n"
        echo
        cmd="podman stop --all"
        echo "${cmd}"
        ${cmd}
        cmd="podman rm --all"
        echo "${cmd}"
        ${cmd}
        cmd="buildah rm --all"
        echo "${cmd}"
        ${cmd}
        cmd="podman rmi --all"
        echo "${cmd}"
        ${cmd}
        stop_github_group

        header="Removing Crucible installed/created files"
        start_github_group "${header}"
        echo -e "### ${header} ###\n"
        echo
        cmd="rm -Rfv /opt/crucible* /var/lib/crucible* /etc/sysconfig/crucible  /root/.crucible /etc/profile.d/crucible_completions.sh /home/crucible-containers"
        echo "${cmd}"
        ${cmd}
        stop_github_group
    else
        header="Environment cleaning disabled"
        start_github_group "${header}"
        echo -e "*** ${header} ***\n"
        stop_github_group
    fi
}

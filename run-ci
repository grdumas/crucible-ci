#!/usr/bin/env bash
# -*- mode: sh; indent-tabs-mode: nil; sh-basic-offset: 4 -*-
# vim: autoindent tabstop=4 shiftwidth=4 expandtab softtabstop=4 filetype=bash

CI_SCENARIOS="fio"

CI_USERENVS="rhubi8"

CI_SAMPLES=1

longopts="scenarios:,userenvs:,samples:"
opts=$(getopt -q -o "" --longoptions "${longopts}" -n "$0" -- "$@")
if [ ${?} -ne 0 ]; then
    echo "ERROR: Unrecognized option specified: $@"
    exit 1
fi
eval set -- "${opts}"
while true; do
    case "${1}" in
        --scenarios)
            shift
            CI_SCENARIOS="${1}"
            shift
            ;;
        --userenvs)
            shift
            CI_USERENVS="${1}"
            shift
            ;;
        --samples)
            shift
            CI_SAMPLES="${1}"
            shift
            ;;
        --)
            shift
            break
            ;;
        *)
            echo "ERROR: Unexpected argument [${1}]"
            shift
            break
            ;;
    esac
done

for scenario in $(echo "${CI_SCENARIOS}" | sed -e "s/,/ /g"); do
    case "${scenario}" in
        fio|uperf)
            ;;
        *)
            echo "ERROR: Unknown CI scenario [${scenario}]"
            exit 1
            ;;
    esac
done

CI_ACTIVE_USERENVS=""
for userenv in $(echo "${CI_USERENVS}" | sed -e "s/,/ /g"); do
    case "${userenv}" in
        all)
            CI_ACTIVE_USERENVS=""
            for userenv in $(pushd /opt/crucible/subprojects/core/rickshaw/userenvs > /dev/null; ls -1 *.json; popd > /dev/null); do
                userenv=$(echo "${userenv}" | sed -e "s/\.json$//")
                CI_ACTIVE_USERENVS+="${userenv} "
            done
            break
            ;;
        *)
            if [ -e /opt/crucible/subprojects/core/rickshaw/userenvs/${userenv}.json ]; then
                CI_ACTIVE_USERENVS+="${userenv} "
            else
                echo "ERROR: Unknown userenv specified [${userenv}]"
                exit 1
            fi
            ;;
    esac
done

set -e

function run_cmd {
    local cmd
    cmd=${1}
    shift

    echo "Running: ${cmd}"
    echo
    ${cmd}
    echo
    echo
}

run_cmd "cat /etc/sysconfig/crucible"

run_cmd "crucible help"

run_cmd "crucible repo info"

for userenv in ${CI_ACTIVE_USERENVS}; do
    echo -e "*** Current userenv is ${userenv} ***\n"

    for scenario in $(echo "${CI_SCENARIOS}" | sed -e "s/,/ /g"); do
        echo -e "### Current scenario is ${scenario} ###\n"

        case "${scenario}" in
            fio)
                run_cmd "crucible run fio --num-samples ${CI_SAMPLES} --test-order s --mv-params /opt/crucible/tests/end-to-end/fio-1.json --endpoint remotehost,host:localhost,user:root,userenv:${userenv},osruntime:podman,client:1"

                run_cmd "crucible run fio --num-samples ${CI_SAMPLES} --test-order r --mv-params /opt/crucible/tests/end-to-end/fio-2.json --endpoint remotehost,host:localhost,user:root,userenv:${userenv},osruntime:podman,client:1"
                ;;
            uperf)
                run_cmd "crucible run uperf --num-samples ${CI_SAMPLES} --test-order s --mv-params /opt/crucible/tests/end-to-end/uperf-1.json --endpoint remotehost,host:localhost,user:root,userenv:${userenv},osruntime:podman,client:1 --endpoint remotehost,host:localhost,user:root,userenv:${userenv},osruntime:podman,server:1"

                run_cmd "crucible run uperf --num-samples ${CI_SAMPLES} --test-order r --mv-params /opt/crucible/tests/end-to-end/uperf-2.json --endpoint remotehost,host:localhost,user:root,userenv:${userenv},osruntime:podman,client:1 --endpoint remotehost,host:localhost,user:root,userenv:${userenv},osruntime:podman,server:1"
                ;;
        esac
    done
done

run_cmd "crucible log info"

run_cmd "crucible log view"

run_cmd "podman ps --all --external"

run_cmd "podman images"

run_cmd "ls -laR /home/crucible-containers"
